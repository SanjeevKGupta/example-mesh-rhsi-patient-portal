#
# Makefile : portal frontend
#

# Check all necessary environment variables
-include ../../env.var.app.cmd.mk
-include ../../env.var.app.image.mk

# Import variables from hzn.json (file is generated by last target in this file)
-include .hzn.json.tmp.mk

export K_ARCH=${ARCH}
export K_DOCKER_IMAGE=${DOCKER_IMAGE}
export K_SERVICE_VERSION=${SERVICE_VERSION}

all: build push apply_kube

# Build the docker container
build:
	@echo ""
	@echo "\033[1;30mBuilding image ${DOCKER_IMAGE}_$(ARCH):${SERVICE_VERSION} \033[0m"
	@docker build --platform linux/${ARCH} -t ${DOCKER_IMAGE}_$(ARCH):${SERVICE_VERSION} -f ./Dockerfile.${ARCH} .

# Push the docker container to the authenticatd CR
push:
	@echo ""
	@echo "\033[1;30mLogin into container registry ${CR_HOST} \033[0m"
	@echo "${CR_APP_API_KEY_RW_PUSH}" | docker login ${CR_HOST} -u ${CR_HOST_USERNAME} --password-stdin

	@echo ""
	@echo "\033[1;30mPushing image $(DOCKER_IMAGE)_$(ARCH):$(SERVICE_VERSION) \033[0m"
	@docker push $(DOCKER_IMAGE)_$(ARCH):$(SERVICE_VERSION)

-include ../../env.var.app.kube.mk
test_kube_envsubst:
	envsubst < ./kube/deploy-frontend.yaml.tmpl

check_var_namespace:
	$(call cmd_var_check,NAMESPACE,as make <target> NAMESPACE=<namespace>)
	@echo ""
	@echo "\033[1;30mCheching namespace ${NAMESPACE} \033[0m"
	@echo "NAMESPACE: ${NAMESPACE}"

create_namespace: check_var_namespace
	$(shell kubectl create namespace ${NAMESPACE} > /dev/null 2>&1)

create_image_pull_secret: create_namespace
	@echo ""
	@echo "\033[1;30mDeleting existing image pull secret ${K_PP_IMAGE_PULL_SECRET_NAME_FRONT} \033[0m"
	$(kubectl delete secret ${K_PP_IMAGE_PULL_SECRET_NAME_FRONT} -n ${NAMESPACE} > /dev/null 2>&1)

	@echo ""
	@echo "\033[1;30mCreating new image pull secret ${K_PP_IMAGE_PULL_SECRET_NAME_FRONT} \033[0m"
	$(shell kubectl create secret docker-registry ${K_PP_IMAGE_PULL_SECRET_NAME_FRONT} -n ${NAMESPACE} --docker-server=${CR_HOST} --docker-username=${CR_HOST_USERNAME} --docker-password=${CR_APP_API_KEY_RO_PULL} --docker-email="" > /dev/null 2>&1)

apply_kube: create_image_pull_secret
	@echo ""
	@echo "\033[1;30mDeleting existing deployment ${K_PP_NAME_FRONT} \033[0m"
	$(shell kubectl delete deploy ${K_PP_NAME_FRONT} -n ${NAMESPACE} > /dev/null 2>&1)

	@echo ""
	@echo "\033[1;30mCreating new deployment in namespace ${NAMESPACE} \033[0m"
	envsubst < ./kube/deploy-frontend.yaml.tmpl > ./kube/deploy-frontend.yaml | kubectl apply -n ${NAMESPACE} -f ./kube/deploy-frontend.yaml

	@echo ""
	@echo "\033[1;30mWaiting 6 seconds before listing pods and svcs \033[0m"
	sleep 6
	oc get pods -n ${NAMESPACE}
	oc get svc -n ${NAMESPACE}

list_pods_svc: create_namespace
	oc get pods -n ${NAMESPACE}
	oc get svc -n ${NAMESPACE}

# This imports the variables from hzn.json
.hzn.json.tmp.mk: hzn/hzn.json
	@ hzn util configconv -f $< > $@
